@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

html {
  height: 100%;
}

body {
  min-height: 100%;
  padding: 20px;
  color: rgb(var(--foreground-rgb));
  /* background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb)); */
  /* background-color: #e6be68; */
  box-shadow: 2px 3px 20px black, 0 0 125px #8f5922 inset;
  background: #e6be68;
  /* background: #fffef0; */
  background-image: url("https://www.transparenttextures.com/patterns/textured-paper.png");
  /* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
}

main {
  height: 100%;
  max-height: 100%;
}

.Hotspot {
  background-color: #ffffffb2;
  border-radius: 4px;
  border: none;
  box-sizing: border-box;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.8);
  display: block;
  font-family: Futura, Helvetica Neue, sans-serif;
  font-size: 12px;
  font-weight: 700;
  max-width: 128px;
  overflow-wrap: break-word;
  padding: 0.5em 1em;
  position: absolute;
  width: max-content;
  height: max-content;
  transform: translate3d(-50%, -50%, 0);
}

.hotspotContent {
  display: none;
  font-weight: 100;
}

.active {
  background-color: white;
}

.annotationPanel > .active > .hotspotContent {
  display: block !important;
}

.annotationPanel .Hotspot {
  width: 100%;
  max-width: 100%;
  transform: none;
  position: relative;
}

.annotationPanel img {
  width: 100%;
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

input:checked + .slider {
  background-color: #2196f3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196f3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.painting path {
  fill: transparent;
}

.cls-1 {
  fill: transparent;
  fill-rule: evenodd;
  cursor: pointer;
  stroke: #4f4f4f;
  stroke-width: 0.5px;
  transform-origin: center;
}

.cls-1:hover {
  stroke-width: 1px;
}

.cls-1 > path {
  fill: transparent;
  fill-rule: evenodd;
  cursor: pointer;
  stroke: #4f4f4f;
  stroke-width: 0.5px;
  transform-origin: center;
}

.cls-1:hover > path {
  stroke-width: 1px;
}

.layer path {
  fill: transparent;
  fill-rule: evenodd;
}

@keyframes breathing {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05); /* slightly bigger */
  }
  100% {
    transform: scale(1); /* back to original size */
  }
}

@keyframes fillBreathing {
  0% {
    fill: rgba(255, 255, 255, 0.4); /* White */
  }
  50% {
    fill: rgba(255, 255, 255, 0.1); /* Transparent */
  }
  100% {
    fill: rgba(255, 255, 255, 0.4); /* White */
  }
}

/* Keyframes for moving elements from left to right and back */
@keyframes moveLeftRightFront {
  0% {
    transform: translateX(0px); /* Start at the original position */
  }
  25% {
    transform: translateX(-1px); /* Move right by 10px */
  }
  50% {
    transform: translateX(0px); /* Move right by 10px */
  }
  75% {
    transform: translateX(1px); /* Move right by 10px */
  }
  100% {
    transform: translateX(0px); /* Return to the original position */
  }
}

@keyframes moveLeftRightMid {
  0% {
    transform: translateX(0px); /* Start at the original position */
  }
  25% {
    transform: translateX(-0.5px); /* Move right by 10px */
  }
  50% {
    transform: translateX(0px); /* Move right by 10px */
  }
  75% {
    transform: translateX(0.5px); /* Move right by 10px */
  }
  100% {
    transform: translateX(0px); /* Return to the original position */
  }
}

@keyframes moveLeftRightBack {
  0% {
    transform: translateX(0px); /* Start at the original position */
  }
  25% {
    transform: translateX(-0.2px); /* Move right by 10px */
  }
  50% {
    transform: translateX(0px); /* Move right by 10px */
  }
  75% {
    transform: translateX(0.2px); /* Move right by 10px */
  }
  100% {
    transform: translateX(0px); /* Return to the original position */
  }
}

/* .cls-1 {
  animation: moveLeftRightFront 3s ease-in-out infinite;
} */

.animated .cls-1 {
  animation: fillBreathing 3s ease-in-out infinite;
}

.animated .cls-1 > path {
  animation: fillBreathing 3s ease-in-out infinite;
}

/* .front {
  animation: moveLeftRightFront 3s ease-in-out infinite;
}

.mid {
  animation: moveLeftRightMid 3s ease-in-out infinite;
}

.back {
  animation: moveLeftRightBack 3s ease-in-out infinite;
}

#image6 {
  animation: moveLeftRightFront 3s ease-in-out infinite;
}
 */

.strokeButton:hover > img {
  opacity: 100%;
}

.stroke-animation {
  /* -webkit-animation: brush 2s 1 forwards;
  animation: brush 2s 1 forwards; */
  /* -webkit-animation: brushAnim 6s 0s 1 backwards reverse;
  -moz-animation: brushAnim 6s 0s 1 backwards reverse;
  -o-animation: brushAnim 6s 0s 1 backwards reverse;
  animation: brushAnim 6s 0s 1 backwards reverse; */

  transform: scaleX(0);
  transform-origin: left;
  animation: grow-left cubic-bezier(0.785, 0.135, 0.15, 0.86) 0.5s forwards;
  animation-delay: 0s;

  /* opacity: 0;
  animation: fade-in-right ease 1.5s forwards; */
}

@keyframes fade-in-right {
  from {
    opacity: 0;
    transform: translateX(-15px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes grow-left {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

@-webkit-keyframes brushAnim {
  0% {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
  100% {
    -webkit-mask-position: 295px 0px;
    mask-position: 295px 0px;
  }
}

@keyframes brushAnim {
  0% {
    -webkit-mask-position: 0 0;
    mask-position: 0 0;
  }
  100% {
    -webkit-mask-position: 295px 0px;
    mask-position: 295px 0px;
  }
}

@-webkit-keyframes mystroke {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}
@keyframes mystroke {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

.reveal {
  -webkit-animation: dude 1.5s 1 forwards;
  animation: dude 1.5s 1 forwards;
  background: rgb(224, 160, 67);
  background: linear-gradient(
    90deg,
    rgba(8, 8, 9, 0) 0%,
    rgba(223, 164, 76, 1) 11%,
    rgba(223, 164, 76, 1) 100%
  );
}

.border-myorange {
  border: 2px solid;
  border-image-slice: 1;
  border-width: 2px;
  border-right: 0;
  border-image-source: linear-gradient(
    180deg,
    rgba(8, 8, 9, 0) 0%,
    rgb(223, 164, 76) 11%,
    rgba(223, 164, 76, 1) 89%,
    rgba(224, 160, 67, 0) 100%
  );
}

@-webkit-keyframes dude {
  0% {
    transform: translateX(200%);
  }
  100% {
    transform: translateX(50%);
  }
}
@keyframes dude {
  0% {
    transform: translateX(200%);
  }
  100% {
    transform: translateX(50%);
  }
}

.m-fadeOut {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s linear 700ms, opacity 700ms;
}
.m-fadeIn {
  visibility: visible;
  opacity: 1;
  transition: visibility 0s linear 0s, opacity 700ms;
}
